@model HackToYourFuture.ViewModels.IndexViewModel


@using (Html.BeginForm("NewPlace"))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <input type="text" id="searchPlace" style="width: 250"/><input type="submit" value="Add" class="btn btn-default" />
        @Html.HiddenFor(model => model.NewPlace.Longitude, new { htmlAttributes = new { @class = "form-control", @id = "newLongitude" } })
        @Html.HiddenFor(model => model.NewPlace.Latitude, new { htmlAttributes = new { @class = "form-control", @id = "newLatitude" } })
        @Html.HiddenFor(model => model.NewPlace.PlaceName, new { htmlAttributes = new { @class = "form-control", @id = "newPlaceName" } })

    </div>
    <div class="well">
        <h3>Comments - "Place Name"</h3>
        @Html.HiddenFor(x => x.NewComment.PlaceID)
        @Html.TextBoxFor(x => x.NewComment.Text)

    </div>

}



@foreach(var place in Model.Places)
{
    <div>
        @place.PlaceName
    </div>
}







<div id="map-canvas" style="height: 500px"></div>

@section scripts {

<script src="https://maps.googleapis.com/maps/api/js?v=3.exp&signed_in=true&libraries=places"></script>

    <script>
        $(document).ready(function () {
            var autocomplete;
            function initialize() {
                var mapOptions = {
                    center: { lat: -37.814, lng: 144.953 },
                    zoom: 12
                };
                var map = new google.maps.Map(document.getElementById('map-canvas'),
                    mapOptions);
            
                var input = document.getElementById("searchPlace");

                autocomplete = new google.maps.places.Autocomplete(input);
                autocomplete.bindTo('bounds', map);

                google.maps.event.addListener(autocomplete, 'place_changed', function () {

                    var place = autocomplete.getPlace();
                    console.log(place.geometry.location.k);
                    $("newPlaceName").val(place.name);
                    $("newPlaceLongitude").val(place.name);
                    $("newPlaceLatitude").val(place.geometry.location.k);
                    $("newPlaceLongitude").val(place.geometry.location.D);
                    console.log(place);
                });
            }

            google.maps.event.addDomListener(window, 'load', initialize);

        

            $.getJSON("@Url.Action("GetComments")", null, function (data) {
                console.log(data);




            });


        });
</script>
}
