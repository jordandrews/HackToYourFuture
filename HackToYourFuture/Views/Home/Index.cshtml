@model HackToYourFuture.ViewModels.IndexViewModel


@using (Html.BeginForm("NewPlace", "Home"))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <div class="well">
            <input type="text" id="searchPlace" /><input type="submit" value="Add" class="btn btn-default" />
            @Html.HiddenFor(model => model.NewPlace.Longitude, new { @class = "form-control", @id = "newLongitude" })
            @Html.HiddenFor(model => model.NewPlace.Latitude, new { @class = "form-control", @id = "newLatitude" })
            @Html.HiddenFor(model => model.NewPlace.PlaceName, new { @class = "form-control", @id = "newPlaceName" })

            <div id="commentDiv">
                <span id="commentTitle"></span><br>
                @Html.TextBoxFor(x => x.NewComment.Text)
            </div>
        </div>
    </div>

}


<div class="list-group col-md-3" id="resultlist" style="clear: both">
    @foreach (var place in Model.Places)
    {
        <a class="list-group-item" data-toggle="collapse" href="#@place.PlaceID" aria-expanded="false" aria-controls="collapseExample">
            @place.PlaceName
        </a>

    <div class="collapse" id="@place.PlaceID">
        <div class="well">

        </div>

    </div>



    }

</div>    

<div class="commentForm">

@using (Html.BeginForm("NewComment", "Home"))
{
    @Html.AntiForgeryToken()

    <div class="form-inline">
            @Html.TextBoxFor(x=> x.NewComment.Text)
            <input type="submit" value="Add" class="btn btn-default" />
            @Html.HiddenFor(model => model.NewComment.PlaceID, new { @class = "form-control", @id="newPlaceID"})
    </div>
}

</div>

<div id="map-canvas" class="col-md-9" style="height: 500px"></div>

@section scripts {

    <script src="https://maps.googleapis.com/maps/api/js?v=3.exp&signed_in=true&libraries=places"></script>

    <script>
    $(document).ready(function () {
        var places = new Array();
        @foreach(var place in Model.Places)
        {
            @:places.push({name: "@place.PlaceName", id: @place.PlaceID, latitude: @place.Latitude, longitude: @place.Longitude});       
        }
        console.log(places);
        var map;
        $("#commentDiv").hide();
        var autocomplete;

        $(".commentForm").hide();

        $(".list-group-item").on("click",function(){
            var itemInt = $(this).attr("href");
            $("#newPlaceID" + itemInt).val(itemInt.substring(1));
            //$("#commentForm").appendTo(itemInt + " .well");
            $(".commentForm").show();
        });


        function initialize() {
            var mapOptions = {
                center: { lat: -37.814, lng: 144.953 },
                zoom: 12
            };
            map = new google.maps.Map(document.getElementById('map-canvas'),
                mapOptions);

            var input = document.getElementById("searchPlace");

            autocomplete = new google.maps.places.Autocomplete(input);
            autocomplete.bindTo('bounds', map);

            google.maps.event.addListener(autocomplete, 'place_changed', function () {

                var place = autocomplete.getPlace();

                $("#commentTitle").html("Comments for - " + place.name);
                $("#commentDiv").show();
                $("#newPlaceName").attr("value", place.name);
                $("#newLatitude").attr("value", place.geometry.location.k);
                $("#newLongitude").attr("value", place.geometry.location.D);


            });




            var flightPlanCoordinates = new Array();
            for (var place in places)
            {
                console.log(places[place]);
                buildMarker(places[place].longitude, places[place].latitude);
                flightPlanCoordinates.push(new google.maps.LatLng(places[place].latitude, places[place].longitude));

                $.getJSON("/Home/GetComments/?placeId="+places[place].id, null, function (data) {
                    data = JSON.parse(data);
                    var dateString = data[0].DateTime.match(/\d+/)[0];
                    dateString = Math.round(parseInt(dateString));

                    var date = new Date(dateString);
                    var prettyDate = date.getDate() + "/" + (date.getMonth()+1) + "/" + date.getFullYear();
                    $("#" + data[0].PlaceID + " .well").append(data[0].Text + " - " + prettyDate );
                    $("#" + data[0].PlaceID + " .well").append($(".commentForm"));
                    $("#" + data[0].PlaceID + " .well").append("text");
                    console.log($(".commentForm"));


                    console.log(data[0].DateTime);
                    console.log(dateString);
                    console.log(date);
                  //  console.log(data[0].DateTime);



                });

            }

            var lineSymbol = {
                path: google.maps.SymbolPath.FORWARD_CLOSED_ARROW
            };

            console.log(flightPlanCoordinates);
            var flightPath = new google.maps.Polyline({
                path: flightPlanCoordinates,
                geodesic: true,
                icons: [{
                    icon: lineSymbol,
                    offset: '100%'
                }],
                strokeColor: '#000000',
                strokeOpacity: 1.0,
                strokeWeight: 3
            });

            flightPath.setMap(map);


        }

        google.maps.event.addDomListener(window, 'load', initialize);


        
       

        function setInfoWindows(title, comments) {
            var contentString = '<table>'+
            '<tr><td colspan="2"><h4>'+title+'</tr>'+
            '<tr><td style="vertical-align: top">comments</td></tr>'+
            '</table>';

            infowindow.setContent(contentString);
            infowindow.open(map,marker);

        }

        // Builds the marker
        function buildMarker(longitude, latitude) {
            var myLatlng = new google.maps.LatLng(latitude, longitude);
            var marker = new google.maps.Marker({
                position: myLatlng,
                map: map,

            });
        }
    });
    </script>
}
